import React, { Component } from 'react'
import { Link } from 'react-router-dom';
import Joi from 'joi-browser';
import Form from './common/form';
import Slider from './common/slider';
import NavShafts from './navShafts';
import { calcDia } from '../code/shaft';
import BMDResults from './common/BMDResults';
import {
    ComposedChart, AreaChart, Line, Area, Bar, XAxis, YAxis, CartesianGrid, Tooltip,
    Legend, Scatter, Brush
  } from 'recharts';
import axios from 'axios';

export default class Shaft extends Form {
    state = {
        data: {
            surfaceFinish:"",
            kb:'',
            kd:'',
            ke:'',
            kc:'',
            kt:'',
            kts:'',
            torque:'',
            length:'',
            q:'',
            qShear:'',
            slider:'',
            gearpd1:'',
            gearpd2:'',
            dg1a:'',
            dg2b:'',
            yieldStrength:'',
            ultimateStrength:''
        },
        surfaceFinish:[],
        errors:{},
        showResult:false
    }
    schema = {
        surfaceFinish:Joi.label('Surface Finish'),
        kb:Joi.label('kb'),
        kc:Joi.label('kc'),
        kd:Joi.label('tempeartue factor'),
        ke:Joi.label('kr'),
        kt:Joi.number().label('Stress concentration factor'),
        kts:Joi.number().label('Stress concentration factor'),
        torque:Joi.number().label('Incoming Torque'),
        length:Joi.number().label('Shaft length'),
        q:Joi.number().label('Notch Sensitivity'),
        qShear:Joi.number().label('Notch sensitivity-shear'),
        slider:Joi.label('Factor of sefety'),
        gearpd1:Joi.number().label('Pitch diameter'),
        gearpd2:Joi.number().label('Pitch diameter'),
        yieldStrength:Joi.number().label('Yield Strength'),
        ultimateStrength:Joi.number().label('Ultimate Strength'),
        dg1a:Joi.number().label('distance'),
        dg2b:Joi.number().label('distance')
    }
    
    doSubmit() {
        const { data } = this.state;
        const surfaceFinish=parseFloat(data.surfaceFinish) || 0; 
        const kb = parseFloat(data.kb) || 0.9;
        const kc = parseFloat(data.kc) || 1;
        const kd = parseFloat(data.kd) || 1.005;
        const ke = parseFloat(data.ke) || 0.702;
        const kt = parseFloat(data.kt) || 1.45;  
        const kts = parseFloat(data.kts) || 1.67;
        const torque = parseFloat(data.torque) || 185.44;
        const length = parseFloat(data.length) || 130; // in mm
        const q = parseFloat(data.q) || 0.82;
        const qShear = parseFloat(data.qShear) || 0.85;
        const slider = parseFloat(data.slider) || 1.7;
        const gearpd1 = parseFloat(data.gearpd1) || 121;
        const gearpd2 = parseFloat(data.gearpd2) || 61;
        const Syt = parseFloat(data.yieldStrength) || 470; // in MPa
        const Sut = parseFloat(data.ultimateStrength) || 700; //in MPa
        const dg1a = parseFloat(data.dg1a) || 92;
        const dg2b = parseFloat(data.dg2b) || 12;
        const result = calcDia(torque, slider, q, qShear, kt, kts, Syt, Sut, kb, kc, kd, ke, gearpd1, gearpd2, dg1a, dg2b, length, surfaceFinish);
        console.log(result);
        return (
            <table style={{background:"#1a1a1d"}} className="table m-0 table-hover table-borderless is-white">
                <thead class="thead" style={{position:"sticky", top:"0"}}>
                    <tr className="is-fira" style={{fontSize:"16px", color:"#fff"}}>
                        <th>Factor of Safety</th>
                        <th>Shaft length(in mm)</th>
                        <th>Inner Diameter(in mm)</th>
                        <th>Outer Diameter(in mm)</th>
                        <th>Notch sensitivity</th>
                        <th>Notch sensitivity-shear</th>
                    </tr>
                </thead>
                <tbody>
                    {result.map( c =>
                        <tr className="is-fira" style={{fontSize:"15px", color:"#fff"}}>
                            <td>{c.FOS}</td>
                            <td>{c.length}</td>
                            <td>{c.inner_D}</td>
                            <td>{c.outer_D}</td>
                            <td>{c.q}</td>
                            <td>{c.qShear}</td>
                            <td><Link to={`/BMDResults?length=${c.length}&Ft1=${c.Ft1}&Ft2=${c.Ft2}&Fr1=${c.Fr1}
                            &Fr2=${c.Fr2}&Ray=${c.Ray}&Raz=${c.Raz}&Rby=${c.Rby}&Rbz=${c.Rbz}&dg1a=${c.dg1a}&outer_D=${toString(c.outer_D)}&inner_D=${toString(c.inner_D)}&dg2b=${c.dg2b}
                            `}><button className="btn btn-danger btn-sm rounded">See result</button></Link></td>
                        </tr>
                    )}
                </tbody>
            </table> 
        );
    }
    async componentDidMount() {
        const { data } = await axios.get("/shaftSurfaceFinish")
        console.log(data)
        this.setState({surfaceFinish:data});
        console.log(this.state.surfaceFinish);
    }
    render() {
        const {surfaceFinish } = this.state;
        return (
            <React.Fragment>
                
                <NavShafts/>
              <form onSubmit={this.handleSubmit}>
                <div className="row m-0">
                    <div className="col-md-6 l">
                    <div className="row m-0 mb-5">
                    <svg width="900" height="auto" className="img-fluid p-1" viewBox="0 0 522 276" fill="none" xmlns="http://www.w3.org/2000/svg">
<line x1="220" y1="184.5" x2="386" y2="184.5" stroke="white"/>
<line y1="-0.5" x2="166" y2="-0.5" transform="matrix(1 0 0 -1 220 130)" stroke="white"/>
<line x1="384.999" y1="130.5" x2="218.999" y2="130.5" stroke="white"/>
<line y1="-0.5" x2="166" y2="-0.5" transform="matrix(-1 0 0 1 385 185)" stroke="white"/>
<line x1="385.5" y1="185" x2="385.5" y2="175" stroke="white"/>
<line y1="-0.5" x2="10" y2="-0.5" transform="matrix(0 1 1 0 386 130)" stroke="white"/>
<line x1="219.499" y1="130" x2="219.499" y2="140" stroke="white"/>
<line y1="-0.5" x2="10" y2="-0.5" transform="matrix(0 -1 -1 0 219 185)" stroke="white"/>
<line x1="385" y1="175.5" x2="471" y2="175.562" stroke="white"/>
<line y1="-0.5" x2="85.9993" y2="-0.5" transform="matrix(1 -0.000717672 -0.000717672 -1 385 139)" stroke="white"/>
<line x1="220" y1="139.5" x2="77" y2="139.5" stroke="white"/>
<line x1="219.999" y1="175.515" x2="76.9999" y2="175.5" stroke="white"/>
<line x1="27" y1="157.5" x2="59" y2="157.5" stroke="white"/>
<line x1="81" y1="157.5" x2="105" y2="157.5" stroke="white"/>
<line x1="127" y1="157.5" x2="151" y2="157.5" stroke="white"/>
<line x1="172" y1="157.5" x2="196" y2="157.5" stroke="white"/>
<line x1="218" y1="157.5" x2="242" y2="157.5" stroke="white"/>
<line x1="263" y1="157.5" x2="287" y2="157.5" stroke="white"/>
<line x1="309" y1="157.5" x2="333" y2="157.5" stroke="white"/>
<line x1="355" y1="157.5" x2="379" y2="157.5" stroke="white"/>
<line x1="400" y1="157.5" x2="424" y2="157.5" stroke="white"/>
<line x1="446" y1="157.5" x2="470" y2="157.5" stroke="white"/>
<line x1="491" y1="157.5" x2="522" y2="157.5" stroke="white"/>
<line x1="219.5" y1="54" x2="219.5" y2="131" stroke="white"/>
<line x1="219.5" y1="54" x2="219.5" y2="131" stroke="white"/>
<line x1="220" y1="54.5" x2="192" y2="54.5" stroke="white"/>
<line x1="220" y1="54.5" x2="192" y2="54.5" stroke="white"/>
<line x1="192.5" y1="54" x2="192.5" y2="140" stroke="white"/>
<line x1="192.5" y1="54" x2="192.5" y2="140" stroke="white"/>
<line x1="192.5" y1="176" x2="192.5" y2="262" stroke="white"/>
<line x1="219.5" y1="185" x2="219.5" y2="262" stroke="white"/>
<line x1="192" y1="261.5" x2="219" y2="261.5" stroke="white"/>
<line x1="213.354" y1="63.6464" x2="219.354" y2="69.6464" stroke="white"/>
<line x1="213.354" y1="63.6464" x2="219.354" y2="69.6464" stroke="white"/>
<line x1="213.354" y1="175.646" x2="219.354" y2="181.646" stroke="white"/>
<line x1="205.354" y1="63.6464" x2="219.354" y2="77.6464" stroke="white"/>
<line x1="205.354" y1="63.6464" x2="219.354" y2="77.6464" stroke="white"/>
<line x1="205.354" y1="175.646" x2="219.354" y2="189.646" stroke="white"/>
<line x1="197.354" y1="63.6464" x2="219.354" y2="85.6464" stroke="white"/>
<line x1="197.354" y1="63.6464" x2="219.354" y2="85.6464" stroke="white"/>
<line x1="197.354" y1="175.646" x2="219.354" y2="197.646" stroke="white"/>
<line x1="192.354" y1="66.6464" x2="219.354" y2="93.6464" stroke="white"/>
<line x1="192.354" y1="66.6464" x2="219.354" y2="93.6464" stroke="white"/>
<line x1="192.354" y1="178.646" x2="219.354" y2="205.646" stroke="white"/>
<line x1="192.354" y1="74.6464" x2="219.354" y2="101.646" stroke="white"/>
<line x1="192.354" y1="74.6464" x2="219.354" y2="101.646" stroke="white"/>
<line x1="192.354" y1="186.646" x2="219.354" y2="213.646" stroke="white"/>
<line x1="192.354" y1="82.6464" x2="219.354" y2="109.646" stroke="white"/>
<line x1="192.354" y1="82.6464" x2="219.354" y2="109.646" stroke="white"/>
<line x1="192.354" y1="194.646" x2="219.354" y2="221.646" stroke="white"/>
<line x1="192.354" y1="90.6464" x2="219.354" y2="117.646" stroke="white"/>
<line x1="192.354" y1="90.6464" x2="219.354" y2="117.646" stroke="white"/>
<line x1="192.354" y1="202.646" x2="219.354" y2="229.646" stroke="white"/>
<line x1="192.354" y1="98.6464" x2="219.354" y2="125.646" stroke="white"/>
<line x1="192.354" y1="98.6464" x2="219.354" y2="125.646" stroke="white"/>
<line x1="192.354" y1="210.646" x2="219.354" y2="237.646" stroke="white"/>
<line x1="192.354" y1="106.646" x2="219.354" y2="133.646" stroke="white"/>
<line x1="192.354" y1="106.646" x2="219.354" y2="133.646" stroke="white"/>
<line x1="192.354" y1="218.646" x2="219.354" y2="245.646" stroke="white"/>
<line x1="192.354" y1="114.646" x2="217.354" y2="139.646" stroke="white"/>
<line x1="192.354" y1="114.646" x2="217.354" y2="139.646" stroke="white"/>
<line x1="192.347" y1="226.64" x2="218.347" y2="251.64" stroke="white"/>
<line x1="192.343" y1="122.636" x2="210.343" y2="139.636" stroke="white"/>
<line x1="192.343" y1="122.636" x2="210.343" y2="139.636" stroke="white"/>
<line x1="192.343" y1="234.636" x2="210.343" y2="251.636" stroke="white"/>
<line x1="192.334" y1="130.628" x2="202.334" y2="139.628" stroke="white"/>
<line x1="192.354" y1="241.646" x2="202.354" y2="251.646" stroke="white"/>
<rect x="471.5" y="170.5" width="18" height="18" rx="1.5" stroke="white"/>
<rect x="471.5" y="126.5" width="18" height="18" rx="1.5" stroke="white"/>
<circle cx="480.5" cy="135.5" r="6" stroke="white"/>
<rect x="58.5" y="126.5" width="18" height="18" rx="1.5" stroke="white"/>
<circle cx="67.5" cy="135.5" r="6" stroke="white"/>
<rect x="58.5" y="171.5" width="18" height="18" rx="1.5" stroke="white"/>
<circle cx="67.5" cy="180.5" r="6" stroke="white"/>
<circle cx="480.5" cy="180.5" r="6" stroke="white"/>
<line x1="490" y1="139.5" x2="493" y2="139.5" stroke="white"/>
<line y1="-0.5" x2="3" y2="-0.5" transform="matrix(-1 0 0 1 58 140)" stroke="white"/>
<line x1="492.5" y1="140" x2="492.5" y2="145" stroke="white"/>
<line y1="-0.5" x2="5" y2="-0.5" transform="matrix(0 1 1 0 56 140)" stroke="white"/>
<line x1="492" y1="144.5" x2="499" y2="144.5" stroke="white"/>
<line y1="-0.5" x2="7" y2="-0.5" transform="matrix(-1 0 0 1 56 145)" stroke="white"/>
<line x1="498.5" y1="145" x2="498.5" y2="172" stroke="white"/>
<line x1="49.5" y1="145" x2="49.5" y2="171" stroke="white"/>
<line x1="498" y1="171.5" x2="492" y2="171.5" stroke="white"/>
<line y1="-0.5" x2="6" y2="-0.5" transform="matrix(1 0 0 -1 50 170)" stroke="white"/>
<line x1="492.5" y1="171" x2="492.5" y2="176" stroke="white"/>
<line y1="-0.5" x2="5" y2="-0.5" transform="matrix(0 1 1 0 56 171)" stroke="white"/>
<line x1="493" y1="175.5" x2="490" y2="175.5" stroke="white"/>
<line x1="56" y1="175.5" x2="58" y2="175.5" stroke="white"/>
<line x1="192" y1="63.5" x2="219" y2="63.5" stroke="white"/>
<line x1="192" y1="63.5" x2="219" y2="63.5" stroke="white"/>
<line x1="219" y1="251.5" x2="193" y2="251.5" stroke="white"/>
<rect x="385.5" y="83.5" width="19" height="56" stroke="white"/>
<rect x="385.5" y="175.5" width="19" height="56" stroke="white"/>
<line x1="386" y1="90.5" x2="404" y2="90.5" stroke="white"/>
<line x1="386" y1="224.5" x2="404" y2="224.5" stroke="white"/>
<line x1="399.384" y1="90.6799" x2="404.384" y2="96.6799" stroke="white"/>
<line x1="399.384" y1="175.68" x2="404.384" y2="181.68" stroke="white"/>
<line x1="394.396" y1="90.6951" x2="404.396" y2="103.695" stroke="white"/>
<line x1="394.396" y1="175.695" x2="404.396" y2="188.695" stroke="white"/>
<line x1="388.398" y1="90.697" x2="404.398" y2="111.697" stroke="white"/>
<line x1="388.398" y1="175.697" x2="404.398" y2="196.697" stroke="white"/>
<line x1="385.398" y1="95.6975" x2="404.398" y2="120.697" stroke="white"/>
<line x1="385.398" y1="180.697" x2="404.398" y2="205.697" stroke="white"/>
<line x1="385.398" y1="104.697" x2="404.398" y2="129.697" stroke="white"/>
<line x1="385.398" y1="189.697" x2="404.398" y2="214.697" stroke="white"/>
<line x1="385.398" y1="113.697" x2="404.398" y2="138.697" stroke="white"/>
<line x1="385.398" y1="198.697" x2="404.398" y2="223.697" stroke="white"/>
<line x1="385.39" y1="124.688" x2="397.39" y2="139.688" stroke="white"/>
<line x1="385.397" y1="207.696" x2="398.397" y2="224.696" stroke="white"/>
<line x1="385.376" y1="216.671" x2="392.376" y2="224.671" stroke="white"/>
<line x1="489.5" y1="142" x2="489.5" y2="172" stroke="white"/>
<line x1="471.5" y1="142" x2="471.5" y2="173" stroke="white"/>
<line x1="76.5" y1="143" x2="76.5" y2="173" stroke="white"/>
<line x1="58.5" y1="142" x2="58.5" y2="172" stroke="white"/>
<path d="M49.527 205.353C49.527 204.651 49.14 204.246 48.447 204.048C48.987 203.796 49.347 203.364 49.347 202.725C49.347 201.456 47.952 201.177 45.756 201.42V207C47.916 207.279 49.527 206.829 49.527 205.353ZM46.773 202.194C47.772 202.077 48.357 202.311 48.357 202.977C48.357 203.625 47.961 203.895 46.773 203.859V202.194ZM46.773 206.226V204.57C47.916 204.516 48.51 204.66 48.51 205.398C48.51 206.163 47.916 206.379 46.773 206.226ZM54.1242 207.108L54.2232 206.271C52.2432 206.226 51.5682 205.929 51.4602 205.029L54.3492 204.948C54.5112 203.391 53.9082 202.401 52.6482 202.401C51.4692 202.401 50.4612 203.463 50.4612 204.84C50.4612 206.298 51.2262 207.135 54.1242 207.108ZM52.4682 203.22C53.0892 203.22 53.3682 203.661 53.3952 204.372C52.8372 204.39 51.9282 204.417 51.4512 204.435C51.4962 203.598 51.8562 203.22 52.4682 203.22ZM57.1735 206.343C56.7145 206.343 56.4175 206.109 56.4175 205.713C56.4175 205.218 56.7865 204.921 58.1725 205.065C58.1815 205.434 58.1815 205.731 58.1995 205.992C57.8845 206.208 57.5155 206.343 57.1735 206.343ZM58.3255 207.027L59.2435 206.982C59.1985 206.361 59.1625 205.65 59.1625 204.777C59.1625 203.031 58.4875 202.473 55.7875 202.428L55.6885 203.274C57.6145 203.337 58.1095 203.544 58.1635 204.408C56.2735 204.327 55.4275 205.047 55.4275 205.947C55.4275 206.676 55.9765 207.117 56.7775 207.117C57.4255 207.117 57.9025 206.82 58.2445 206.487C58.2715 206.703 58.3165 206.991 58.3255 207.027ZM63.7957 207L63.8767 206.244H62.5177C62.4997 205.29 62.4907 204.534 62.4727 203.859C62.9767 203.616 63.5977 203.454 64.3717 203.409L64.3267 202.347C63.4807 202.455 62.8417 202.824 62.4367 203.292C62.4187 203.067 62.3647 202.563 62.3557 202.518H60.5017L60.4207 203.229L61.4827 203.301C61.5007 204.093 61.5097 205.029 61.5277 206.244H60.4387V207H63.7957ZM67.943 201.843L68.024 200.583H66.971L66.908 201.843H67.943ZM69.446 207L69.527 206.244H67.97V202.518H65.468L65.387 203.229L66.962 203.301V206.244H65.405V207H69.446ZM72.3152 203.256C72.7742 203.256 73.0712 203.508 73.0712 204.3V207H74.0702V203.949C74.0702 202.86 73.5662 202.401 72.7832 202.401C72.1622 202.401 71.7032 202.689 71.3432 203.013L71.2892 202.5L70.3622 202.554C70.4162 203.571 70.4342 204.984 70.4342 207H71.4422C71.4422 205.56 71.4242 204.39 71.4062 203.553C71.6852 203.373 71.9732 203.256 72.3152 203.256ZM75.7875 208.575C78.3435 208.449 78.9555 207.423 78.9555 205.785C78.9555 205.056 78.9465 203.121 78.9285 202.626C78.4785 202.491 78.0285 202.41 77.5785 202.41C76.2555 202.41 75.1485 203.319 75.1485 204.741C75.1485 205.893 75.8595 206.604 76.7955 206.604C77.2725 206.604 77.6505 206.442 77.9475 206.226C77.9205 207.36 77.6865 207.513 75.6975 207.675L75.7875 208.575ZM77.1825 205.821C76.5975 205.821 76.1385 205.398 76.1385 204.507C76.1385 203.679 76.5795 203.256 77.2185 203.256C77.4525 203.256 77.6955 203.301 77.9475 203.373V205.632C77.7045 205.749 77.4435 205.821 77.1825 205.821ZM89.0499 207L89.1309 206.163H87.7809V201.24L86.8179 201.321V201.978L85.4319 202.122L85.4499 202.851L86.8179 202.815V206.163H85.3059V207H89.0499Z" fill="white"/>
<path d="M54.654 108.081L55.761 107.946L54.447 105.534C54.969 105.156 55.356 104.67 55.356 103.968C55.356 102.807 54.492 102.069 51.729 102.429V108H52.746V106.074L53.628 106.056L54.654 108.081ZM52.746 103.212C53.835 103.068 54.339 103.455 54.339 104.193C54.339 104.679 54.096 105.075 53.727 105.327L52.746 105.354V103.212Z" fill="white"/>
<path d="M58.448 111.024L59.144 110.976C58.826 109.74 58.496 108.516 58.13 107.274H57.176C56.804 108.516 56.48 109.764 56.162 111H56.846C56.93 110.658 57.008 110.31 57.092 109.968H58.196C58.28 110.322 58.364 110.676 58.448 111.024ZM57.62 107.838H57.668C57.806 108.372 57.944 108.918 58.076 109.464H57.212C57.344 108.918 57.482 108.378 57.62 107.838ZM59.7248 112.062C60.7988 111.966 61.1168 111.684 61.5488 110.478C61.8788 109.59 62.1728 108.69 62.3888 108.012H61.7468C61.6688 108.21 61.2608 109.632 61.0748 110.208H61.0148C60.7388 109.548 60.4208 108.648 60.1748 107.988L59.4968 108.036C59.7248 108.63 60.3428 110.22 60.6248 110.85L60.7388 110.892C60.5648 111.294 60.3788 111.36 59.6708 111.462L59.7248 112.062Z" fill="white"/>
<path d="M478.654 111.081L479.761 110.946L478.447 108.534C478.969 108.156 479.356 107.67 479.356 106.968C479.356 105.807 478.492 105.069 475.729 105.429V111H476.746V109.074L477.628 109.056L478.654 111.081ZM476.746 106.212C477.835 106.068 478.339 106.455 478.339 107.193C478.339 107.679 478.096 108.075 477.727 108.327L476.746 108.354V106.212Z" fill="white"/>
<path d="M483.018 112.902C483.018 112.434 482.76 112.164 482.298 112.032C482.658 111.864 482.898 111.576 482.898 111.15C482.898 110.304 481.968 110.118 480.504 110.28V114C481.944 114.186 483.018 113.886 483.018 112.902ZM481.182 110.796C481.848 110.718 482.238 110.874 482.238 111.318C482.238 111.75 481.974 111.93 481.182 111.906V110.796ZM481.182 113.484V112.38C481.944 112.344 482.34 112.44 482.34 112.932C482.34 113.442 481.944 113.586 481.182 113.484ZM483.725 115.062C484.799 114.966 485.117 114.684 485.549 113.478C485.879 112.59 486.173 111.69 486.389 111.012H485.747C485.669 111.21 485.261 112.632 485.075 113.208H485.015C484.739 112.548 484.421 111.648 484.175 110.988L483.497 111.036C483.725 111.63 484.343 113.22 484.625 113.85L484.739 113.892C484.565 114.294 484.379 114.36 483.671 114.462L483.725 115.062Z" fill="white"/>
<path d="M445.654 191.081L446.761 190.946L445.447 188.534C445.969 188.156 446.356 187.67 446.356 186.968C446.356 185.807 445.492 185.069 442.729 185.429V191H443.746V189.074L444.628 189.056L445.654 191.081ZM443.746 186.212C444.835 186.068 445.339 186.455 445.339 187.193C445.339 187.679 445.096 188.075 444.727 188.327L443.746 188.354V186.212Z" fill="white"/>
<path d="M450.018 192.902C450.018 192.434 449.76 192.164 449.298 192.032C449.658 191.864 449.898 191.576 449.898 191.15C449.898 190.304 448.968 190.118 447.504 190.28V194C448.944 194.186 450.018 193.886 450.018 192.902ZM448.182 190.796C448.848 190.718 449.238 190.874 449.238 191.318C449.238 191.75 448.974 191.93 448.182 191.906V190.796ZM448.182 193.484V192.38C448.944 192.344 449.34 192.44 449.34 192.932C449.34 193.442 448.944 193.586 448.182 193.484ZM453.191 194L453.239 193.406L451.475 193.43L453.179 191.57V191.012H450.761L450.707 191.6L452.417 191.582L450.707 193.436V194H453.191Z" fill="white"/>
<path d="M30.654 194.081L31.761 193.946L30.447 191.534C30.969 191.156 31.356 190.67 31.356 189.968C31.356 188.807 30.492 188.069 27.729 188.429V194H28.746V192.074L29.628 192.056L30.654 194.081ZM28.746 189.212C29.835 189.068 30.339 189.455 30.339 190.193C30.339 190.679 30.096 191.075 29.727 191.327L28.746 191.354V189.212Z" fill="white"/>
<path d="M34.448 197.024L35.144 196.976C34.826 195.74 34.496 194.516 34.13 193.274H33.176C32.804 194.516 32.48 195.764 32.162 197H32.846C32.93 196.658 33.008 196.31 33.092 195.968H34.196C34.28 196.322 34.364 196.676 34.448 197.024ZM33.62 193.838H33.668C33.806 194.372 33.944 194.918 34.076 195.464H33.212C33.344 194.918 33.482 194.378 33.62 193.838ZM38.1908 197L38.2388 196.406L36.4748 196.43L38.1788 194.57V194.012H35.7608L35.7068 194.6L37.4168 194.582L35.7068 196.436V197H38.1908Z" fill="white"/>
<path d="M196.365 274.928C196.356 274.208 196.356 273.353 196.356 272.21H195.402C195.411 272.894 195.438 273.704 195.447 274.271C194.007 274.298 193.494 273.551 193.494 272.192C193.494 271.04 193.854 270.239 196.14 270.329L196.077 269.339C193.296 269.42 192.441 270.734 192.441 272.363C192.441 274.361 193.701 275.513 196.365 274.928ZM201.124 275.108L201.223 274.271C199.243 274.226 198.568 273.929 198.46 273.029L201.349 272.948C201.511 271.391 200.908 270.401 199.648 270.401C198.469 270.401 197.461 271.463 197.461 272.84C197.461 274.298 198.226 275.135 201.124 275.108ZM199.468 271.22C200.089 271.22 200.368 271.661 200.395 272.372C199.837 272.39 198.928 272.417 198.451 272.435C198.496 271.598 198.856 271.22 199.468 271.22ZM204.173 274.343C203.714 274.343 203.417 274.109 203.417 273.713C203.417 273.218 203.786 272.921 205.172 273.065C205.181 273.434 205.181 273.731 205.199 273.992C204.884 274.208 204.515 274.343 204.173 274.343ZM205.325 275.027L206.243 274.982C206.198 274.361 206.162 273.65 206.162 272.777C206.162 271.031 205.487 270.473 202.787 270.428L202.688 271.274C204.614 271.337 205.109 271.544 205.163 272.408C203.273 272.327 202.427 273.047 202.427 273.947C202.427 274.676 202.976 275.117 203.777 275.117C204.425 275.117 204.902 274.82 205.244 274.487C205.271 274.703 205.316 274.991 205.325 275.027ZM210.796 275L210.877 274.244H209.518C209.5 273.29 209.491 272.534 209.473 271.859C209.977 271.616 210.598 271.454 211.372 271.409L211.327 270.347C210.481 270.455 209.842 270.824 209.437 271.292C209.419 271.067 209.365 270.563 209.356 270.518H207.502L207.421 271.229L208.483 271.301C208.501 272.093 208.51 273.029 208.528 274.244H207.439V275H210.796ZM221.205 275L221.286 274.163H219.936V269.24L218.973 269.321V269.978L217.587 270.122L217.605 270.851L218.973 270.815V274.163H217.461V275H221.205Z" fill="white"/>
<path d="M384.365 245.928C384.356 245.208 384.356 244.353 384.356 243.21H383.402C383.411 243.894 383.438 244.704 383.447 245.271C382.007 245.298 381.494 244.551 381.494 243.192C381.494 242.04 381.854 241.239 384.14 241.329L384.077 240.339C381.296 240.42 380.441 241.734 380.441 243.363C380.441 245.361 381.701 246.513 384.365 245.928ZM389.124 246.108L389.223 245.271C387.243 245.226 386.568 244.929 386.46 244.029L389.349 243.948C389.511 242.391 388.908 241.401 387.648 241.401C386.469 241.401 385.461 242.463 385.461 243.84C385.461 245.298 386.226 246.135 389.124 246.108ZM387.468 242.22C388.089 242.22 388.368 242.661 388.395 243.372C387.837 243.39 386.928 243.417 386.451 243.435C386.496 242.598 386.856 242.22 387.468 242.22ZM392.173 245.343C391.714 245.343 391.417 245.109 391.417 244.713C391.417 244.218 391.786 243.921 393.172 244.065C393.181 244.434 393.181 244.731 393.199 244.992C392.884 245.208 392.515 245.343 392.173 245.343ZM393.325 246.027L394.243 245.982C394.198 245.361 394.162 244.65 394.162 243.777C394.162 242.031 393.487 241.473 390.787 241.428L390.688 242.274C392.614 242.337 393.109 242.544 393.163 243.408C391.273 243.327 390.427 244.047 390.427 244.947C390.427 245.676 390.976 246.117 391.777 246.117C392.425 246.117 392.902 245.82 393.244 245.487C393.271 245.703 393.316 245.991 393.325 246.027ZM398.796 246L398.877 245.244H397.518C397.5 244.29 397.491 243.534 397.473 242.859C397.977 242.616 398.598 242.454 399.372 242.409L399.327 241.347C398.481 241.455 397.842 241.824 397.437 242.292C397.419 242.067 397.365 241.563 397.356 241.518H395.502L395.421 242.229L396.483 242.301C396.501 243.093 396.51 244.029 396.528 245.244H395.439V246H398.796ZM409.088 246V245.136H406.559C408.062 243.957 408.944 243.138 408.944 242.004C408.944 241.077 408.188 240.321 405.614 240.348L405.533 241.275C407.414 241.302 407.954 241.635 407.954 242.265C407.954 243.093 407.045 243.903 405.362 245.208L405.461 246H409.088Z" fill="white"/>
<path d="M462.527 203.353C462.527 202.651 462.14 202.246 461.447 202.048C461.987 201.796 462.347 201.364 462.347 200.725C462.347 199.456 460.952 199.177 458.756 199.42V205C460.916 205.279 462.527 204.829 462.527 203.353ZM459.773 200.194C460.772 200.077 461.357 200.311 461.357 200.977C461.357 201.625 460.961 201.895 459.773 201.859V200.194ZM459.773 204.226V202.57C460.916 202.516 461.51 202.66 461.51 203.398C461.51 204.163 460.916 204.379 459.773 204.226ZM467.124 205.108L467.223 204.271C465.243 204.226 464.568 203.929 464.46 203.029L467.349 202.948C467.511 201.391 466.908 200.401 465.648 200.401C464.469 200.401 463.461 201.463 463.461 202.84C463.461 204.298 464.226 205.135 467.124 205.108ZM465.468 201.22C466.089 201.22 466.368 201.661 466.395 202.372C465.837 202.39 464.928 202.417 464.451 202.435C464.496 201.598 464.856 201.22 465.468 201.22ZM470.173 204.343C469.714 204.343 469.417 204.109 469.417 203.713C469.417 203.218 469.786 202.921 471.172 203.065C471.181 203.434 471.181 203.731 471.199 203.992C470.884 204.208 470.515 204.343 470.173 204.343ZM471.325 205.027L472.243 204.982C472.198 204.361 472.162 203.65 472.162 202.777C472.162 201.031 471.487 200.473 468.787 200.428L468.688 201.274C470.614 201.337 471.109 201.544 471.163 202.408C469.273 202.327 468.427 203.047 468.427 203.947C468.427 204.676 468.976 205.117 469.777 205.117C470.425 205.117 470.902 204.82 471.244 204.487C471.271 204.703 471.316 204.991 471.325 205.027ZM476.796 205L476.877 204.244H475.518C475.5 203.29 475.491 202.534 475.473 201.859C475.977 201.616 476.598 201.454 477.372 201.409L477.327 200.347C476.481 200.455 475.842 200.824 475.437 201.292C475.419 201.067 475.365 200.563 475.356 200.518H473.502L473.421 201.229L474.483 201.301C474.501 202.093 474.51 203.029 474.528 204.244H473.439V205H476.796ZM480.943 199.843L481.024 198.583H479.971L479.908 199.843H480.943ZM482.446 205L482.527 204.244H480.97V200.518H478.468L478.387 201.229L479.962 201.301V204.244H478.405V205H482.446ZM485.315 201.256C485.774 201.256 486.071 201.508 486.071 202.3V205H487.07V201.949C487.07 200.86 486.566 200.401 485.783 200.401C485.162 200.401 484.703 200.689 484.343 201.013L484.289 200.5L483.362 200.554C483.416 201.571 483.434 202.984 483.434 205H484.442C484.442 203.56 484.424 202.39 484.406 201.553C484.685 201.373 484.973 201.256 485.315 201.256ZM488.787 206.575C491.343 206.449 491.955 205.423 491.955 203.785C491.955 203.056 491.946 201.121 491.928 200.626C491.478 200.491 491.028 200.41 490.578 200.41C489.255 200.41 488.148 201.319 488.148 202.741C488.148 203.893 488.859 204.604 489.795 204.604C490.272 204.604 490.65 204.442 490.947 204.226C490.92 205.36 490.686 205.513 488.697 205.675L488.787 206.575ZM490.182 203.821C489.597 203.821 489.138 203.398 489.138 202.507C489.138 201.679 489.579 201.256 490.218 201.256C490.452 201.256 490.695 201.301 490.947 201.373V203.632C490.704 203.749 490.443 203.821 490.182 203.821ZM501.933 205V204.136H499.404C500.907 202.957 501.789 202.138 501.789 201.004C501.789 200.077 501.033 199.321 498.459 199.348L498.378 200.275C500.259 200.302 500.799 200.635 500.799 201.265C500.799 202.093 499.89 202.903 498.207 204.208L498.306 205H501.933Z" fill="white"/>
<line x1="206" y1="48" x2="206" y2="16" stroke="#FFAF46" stroke-width="2"/>
<path d="M206 53L209.464 43.25H202.536L206 53Z" fill="#FFAF46"/>
<line x1="68" y1="154" x2="68" y2="115" stroke="#FFAF46" stroke-width="2"/>
<path d="M68 159L71.4641 149.25H64.5359L68 159Z" fill="#FFAF46"/>
<line x1="480" y1="153" x2="480" y2="121" stroke="#FFAF46" stroke-width="2"/>
<path d="M480 158L483.464 148.25H476.536L480 158Z" fill="#FFAF46"/>
<line x1="64.3257" y1="163.007" x2="35.6216" y2="185.783" stroke="#FFAF46" stroke-width="2"/>
<path d="M67.7078 159.762L58.2829 163.809L62.4899 168.592L67.7078 159.762Z" fill="#FFAF46"/>
<line x1="476.322" y1="162.01" x2="450.322" y2="182.455" stroke="#FFAF46" stroke-width="2"/>
<path d="M479.708 158.762L470.283 162.809L474.49 167.592L479.708 158.762Z" fill="#FFAF46"/>
<line x1="395" y1="75" x2="395" y2="46" stroke="#FFAF46" stroke-width="2"/>
<path d="M395 80L398.464 70.25H391.536L395 80Z" fill="#FFAF46"/>
<line x1="211.669" y1="49.2409" x2="234.053" y2="24.6482" stroke="#FFAF46" stroke-width="2"/>
<path d="M207.968 52.597L212.097 43.0819L217.238 47.9443L207.968 52.597Z" fill="#FFAF46"/>
<line x1="392.032" y1="84.5649" x2="368.635" y2="103.773" stroke="#FFAF46" stroke-width="2"/>
<path d="M395.763 81.2492L390.317 89.8417L386.504 85.4623L395.763 81.2492Z" fill="#FFAF46"/>
<path d="M69.328 166.036L68.284 165.964C68.761 164.11 69.256 162.274 69.805 160.411H71.236C71.794 162.274 72.28 164.146 72.757 166H71.731C71.605 165.487 71.488 164.965 71.362 164.452H69.706C69.58 164.983 69.454 165.514 69.328 166.036ZM70.57 161.257H70.498C70.291 162.058 70.084 162.877 69.886 163.696H71.182C70.984 162.877 70.777 162.067 70.57 161.257Z" fill="white"/>
<path d="M486.527 164.353C486.527 163.651 486.14 163.246 485.447 163.048C485.987 162.796 486.347 162.364 486.347 161.725C486.347 160.456 484.952 160.177 482.756 160.42V166C484.916 166.279 486.527 165.829 486.527 164.353ZM483.773 161.194C484.772 161.077 485.357 161.311 485.357 161.977C485.357 162.625 484.961 162.895 483.773 162.859V161.194ZM483.773 165.226V163.57C484.916 163.516 485.51 163.66 485.51 164.398C485.51 165.163 484.916 165.379 483.773 165.226Z" fill="white"/>
<path d="M205.654 9.081L206.761 8.946L205.447 6.534C205.969 6.156 206.356 5.67 206.356 4.968C206.356 3.807 205.492 3.069 202.729 3.429V9H203.746V7.074L204.628 7.056L205.654 9.081ZM203.746 4.212C204.835 4.068 205.339 4.455 205.339 5.193C205.339 5.679 205.096 6.075 204.727 6.327L203.746 6.354V4.212Z" fill="white"/>
<path d="M209.91 11.952C209.904 11.472 209.904 10.902 209.904 10.14H209.268C209.274 10.596 209.292 11.136 209.298 11.514C208.338 11.532 207.996 11.034 207.996 10.128C207.996 9.36 208.236 8.826 209.76 8.886L209.718 8.226C207.864 8.28 207.294 9.156 207.294 10.242C207.294 11.574 208.134 12.342 209.91 11.952ZM213.275 12L213.329 11.442H212.429V8.16L211.787 8.214V8.652L210.863 8.748L210.875 9.234L211.787 9.21V11.442H210.779V12H213.275ZM214.024 13.062C215.098 12.966 215.416 12.684 215.848 11.478C216.178 10.59 216.472 9.69 216.688 9.012H216.046C215.968 9.21 215.56 10.632 215.374 11.208H215.314C215.038 10.548 214.72 9.648 214.474 8.988L213.796 9.036C214.024 9.63 214.642 11.22 214.924 11.85L215.038 11.892C214.864 12.294 214.678 12.36 213.97 12.462L214.024 13.062Z" fill="white"/>
<path d="M391.654 36.081L392.761 35.946L391.447 33.534C391.969 33.156 392.356 32.67 392.356 31.968C392.356 30.807 391.492 30.069 388.729 30.429V36H389.746V34.074L390.628 34.056L391.654 36.081ZM389.746 31.212C390.835 31.068 391.339 31.455 391.339 32.193C391.339 32.679 391.096 33.075 390.727 33.327L389.746 33.354V31.212Z" fill="white"/>
<path d="M395.91 38.952C395.904 38.472 395.904 37.902 395.904 37.14H395.268C395.274 37.596 395.292 38.136 395.298 38.514C394.338 38.532 393.996 38.034 393.996 37.128C393.996 36.36 394.236 35.826 395.76 35.886L395.718 35.226C393.864 35.28 393.294 36.156 393.294 37.242C393.294 38.574 394.134 39.342 395.91 38.952ZM399.197 39V38.424H397.511C398.513 37.638 399.101 37.092 399.101 36.336C399.101 35.718 398.597 35.214 396.881 35.232L396.827 35.85C398.081 35.868 398.441 36.09 398.441 36.51C398.441 37.062 397.835 37.602 396.713 38.472L396.779 39H399.197ZM400.024 40.062C401.098 39.966 401.416 39.684 401.848 38.478C402.178 37.59 402.472 36.69 402.688 36.012H402.046C401.968 36.21 401.56 37.632 401.374 38.208H401.314C401.038 37.548 400.72 36.648 400.474 35.988L399.796 36.036C400.024 36.63 400.642 38.22 400.924 38.85L401.038 38.892C400.864 39.294 400.678 39.36 399.97 39.462L400.024 40.062Z" fill="white"/>
<path d="M239.654 22.081L240.761 21.946L239.447 19.534C239.969 19.156 240.356 18.67 240.356 17.968C240.356 16.807 239.492 16.069 236.729 16.429V22H237.746V20.074L238.628 20.056L239.654 22.081ZM237.746 17.212C238.835 17.068 239.339 17.455 239.339 18.193C239.339 18.679 239.096 19.075 238.727 19.327L237.746 19.354V17.212Z" fill="white"/>
<path d="M243.91 24.952C243.904 24.472 243.904 23.902 243.904 23.14H243.268C243.274 23.596 243.292 24.136 243.298 24.514C242.338 24.532 241.996 24.034 241.996 23.128C241.996 22.36 242.236 21.826 243.76 21.886L243.718 21.226C241.864 21.28 241.294 22.156 241.294 23.242C241.294 24.574 242.134 25.342 243.91 24.952ZM247.275 25L247.329 24.442H246.429V21.16L245.787 21.214V21.652L244.863 21.748L244.875 22.234L245.787 22.21V24.442H244.779V25H247.275ZM250.49 25L250.538 24.406L248.774 24.43L250.478 22.57V22.012H248.06L248.006 22.6L249.716 22.582L248.006 24.436V25H250.49Z" fill="white"/>
<path d="M68.2828 90.7172C68.1266 90.5609 67.8734 90.5609 67.7172 90.7172L65.1716 93.2627C65.0154 93.419 65.0154 93.6722 65.1716 93.8284C65.3278 93.9846 65.581 93.9846 65.7373 93.8284L68 91.5657L70.2627 93.8284C70.419 93.9846 70.6722 93.9846 70.8284 93.8284C70.9846 93.6722 70.9846 93.419 70.8284 93.2627L68.2828 90.7172ZM68.4 110V91H67.6V110H68.4Z" fill="white"/>
<path d="M8.60402 206.467C8.57452 206.686 8.72808 206.887 8.94702 206.917L12.5148 207.398C12.7337 207.427 12.9351 207.274 12.9646 207.055C12.9941 206.836 12.8405 206.634 12.6216 206.605L9.45028 206.177L9.87764 203.006C9.90714 202.787 9.75358 202.586 9.53464 202.556C9.31571 202.527 9.11431 202.68 9.08481 202.899L8.60402 206.467ZM23.8668 194.682L8.7579 206.202L9.24297 206.839L24.3519 195.318L23.8668 194.682Z" fill="white"/>
<path d="M66.71 86.77C68.5 86.61 69.03 86.14 69.75 84.13C70.3 82.65 70.79 81.15 71.15 80.02H70.08C69.95 80.35 69.27 82.72 68.96 83.68H68.86C68.4 82.58 67.87 81.08 67.46 79.98L66.33 80.06C66.71 81.05 67.74 83.7 68.21 84.75L68.4 84.82C68.11 85.49 67.8 85.6 66.62 85.77L66.71 86.77Z" fill="white"/>
<path d="M4.82 215L4.9 214.01L1.96 214.05L4.8 210.95V210.02H0.77L0.68 211L3.53 210.97L0.68 214.06V215H4.82Z" fill="white"/>
<path d="M357.654 109.081L358.761 108.946L357.447 106.534C357.969 106.156 358.356 105.67 358.356 104.968C358.356 103.807 357.492 103.069 354.729 103.429V109H355.746V107.074L356.628 107.056L357.654 109.081ZM355.746 104.212C356.835 104.068 357.339 104.455 357.339 105.193C357.339 105.679 357.096 106.075 356.727 106.327L355.746 106.354V104.212Z" fill="white"/>
<path d="M361.91 111.952C361.904 111.472 361.904 110.902 361.904 110.14H361.268C361.274 110.596 361.292 111.136 361.298 111.514C360.338 111.532 359.996 111.034 359.996 110.128C359.996 109.36 360.236 108.826 361.76 108.886L361.718 108.226C359.864 108.28 359.294 109.156 359.294 110.242C359.294 111.574 360.134 112.342 361.91 111.952ZM365.197 112V111.424H363.511C364.513 110.638 365.101 110.092 365.101 109.336C365.101 108.718 364.597 108.214 362.881 108.232L362.827 108.85C364.081 108.868 364.441 109.09 364.441 109.51C364.441 110.062 363.835 110.602 362.713 111.472L362.779 112H365.197ZM368.49 112L368.538 111.406L366.774 111.43L368.478 109.57V109.012H366.06L366.006 109.6L367.716 109.582L366.006 111.436V112H368.49Z" fill="white"/>
</svg>
                        </div>
                    <div className="row m-5 p-1 justify-content-start flex-column">
                    <div className="d-flex flex-column">
                                <h2 className="is-white is-op m-0">Surface Finish</h2>
                                <select placeholder="surface finish" className="mb-3" id="material" name="surfaceFinish" onChange={this.handleMaterial}>
                                    {surfaceFinish.map(s => <option style={{fontWeight:"600", fontFamily:"Fira Code"}} key={s._id} value={s.value}>{s.label}</option>)}
                                </select>
                                </div>
                                Size Factor
                                {this.renderInput('kb', 'Size Factor(Kb)')}
                                <h6 className="is-white is-op ml-1 mb-5">If value of Size factor is not provided then, default value of 0.9 will be considered</h6>
                                {this.renderInput('kd', 'Temperature Factor(Kd)')}
                                <h6 className="is-white is-op ml-1 mb-5">If value of temperature factor is not provided then, default value of 1.005 will be considered</h6>
                                {this.renderInput('ke', 'Reliability Factor(Ke)')}
                                <h6 className="is-white is-op ml-1 mb-5">If value of reliability factor is not provided then, default value of 0.702(for 99.99% reliability) will be considered</h6>
                                {this.renderInput('kc', 'Loading Factor(Kc)')}
                            </div>
                    </div>
                    <div className="col-md-6 r">
                    <div className="row m-5 p-1 justify-content-around">
                        {this.renderInput('torque', 'Torque coming on shaft')}
                        {this.renderInput('length', 'Total length of Shaft(in mm)')}   
                        {this.renderInput('q', 'Notch Sensitivity')}
                        {this.renderInput('qShear', 'Notch Sensitivity(shear)')}
                        {this.renderInput('kt', 'Stress concentration factor')}
                        {this.renderInput('kts', 'Stress concentration factor(shear)')}
                        <div className="form-row mt-4" style={{width:"400px"}}>
                            <Slider name="slider" label="Preferred Factor of safety" value={this.state.data.slider} min="1" max="4" valueName="FOS" width="400" step="0.01" onChange={this.handleSlide}/>
                        </div>
                    </div>
                    <div id="firstRow" className="row background-2 border m-5 justify-content-around first-row">
                                <div className="col-md-12 mb-4 border-bottom border-warning mt-2 p-3 is-white text-left">
                                    <h2 className="form-headings">Constraints</h2>
                                </div>                        
                                <h5 className="is-white is-op p-4">If a single gear is mounted on shaft then consider it as Gear1(as shown in figure) and don't fill Gear2 fields</h5>
                                {this.renderInput('gearpd1', 'Pitch Diameter of Gear1')}
                                {this.renderInput('gearpd2', 'Pitch Diameter of Gear2')}
                                {this.renderInput('dg1a', 'Distance b|w Gear1 and point A')}
                                {this.renderInput('dg2b', 'Distance b|w Gear2 and point B')}
                                <div className="form-row m-0 is-white">
                                </div>
                    </div>
                            <div id="firstRow" className="row background-2 border m-5 justify-content-around first-row">
                                <div className="col-md-12 mb-4 border-bottom border-warning mt-2 p-3 is-white text-left">
                                    <h2 className="form-headings">Material Data</h2>
                                </div>
                                {this.renderInput('yieldStrength', 'Tensile  Strength')}
                                {this.renderInput('ultimateStrength', 'Ultimate  Strength')}
                                <div className="form-row m-0 is-white">
                                </div>
                            </div>
                            <div className="row m-5 ">
                                <div className=" m-0 col-md-12 d-flex justify-content-center">
                                    {this.renderButton("Analyse")}
                                </div>
                            </div>
                    </div>
                </div>
            </form>
            {this.state.showResult && this.doSubmit()}
            </React.Fragment>
        );
    }
}
